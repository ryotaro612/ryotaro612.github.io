<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peer-to-peer on Blanket</title>
    <link>https://nryotaro.dev/tags/peer-to-peer/</link>
    <description>Recent content in Peer-to-peer on Blanket</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 23 Nov 2023 12:31:01 -0500</lastBuildDate><atom:link href="https://nryotaro.dev/tags/peer-to-peer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chord: A Scalable Peer-to-peer Lookup Service for Internet Applications</title>
      <link>https://nryotaro.dev/posts/chord-a-scalable-peer-to-peer-lookup-service-for-internet-application/</link>
      <pubDate>Thu, 23 Nov 2023 12:31:01 -0500</pubDate>
      
      <guid>https://nryotaro.dev/posts/chord-a-scalable-peer-to-peer-lookup-service-for-internet-application/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pdos.csail.mit.edu/papers/ton:chord/paper-ton.pdf&#34;&gt;Chord&lt;/a&gt;は、キーによるノードの問い合せを、ノードの総数が\(N\)であれば\(O(\log N)\)のノードを介して解決できる&lt;a href=&#34;https://www.cs.princeton.edu/courses/archive/fall09/cos518/papers/chash.pdf&#34;&gt;Consistent Hashing&lt;/a&gt;を利用したPeer-to-peerのアルゴリズムである。
\(2^m\)以下のノードが参加するConsistent hashingは、\(\mod(2^m)\)の非負の整数をIDにしてキーとノードを管理し、IDの空間上で隣接するノードにキーをわりあてる。
このとき、Consistent hashingの利点はキーを均等に配置できることにあり、ノードの参加、離脱時に移動すべきキー数が\(O(1/N)\)に収まる。
参加、離脱するノードと隣接するノード間でのみキーの移動が生じる。
Chordは、多くのノードが参加できるように、各ノードにもたせるルーティング情報を\(m\)個のほかのノードのみに限定する。
クライアントや別のノードからキーを受信したノードは、ルーティング情報にあるノードと自分のID \(\textit{n}\)をキー\(\textit{key}\)と比較する。
このとき、\(\textit{key} + x \equiv n_i\mod 2^m\)をみたす最小の非負の整数\(x\)に対応する\(n_i\)が自分のIDであれば、そのノードがキーに対応する。
それ以外の場合は、最小の値になるIDをもつノードにキーを転送する。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pastry: Scalable Decentralized Object Location and Routing for Large Scale Peer to Peer Systems (2001)</title>
      <link>https://nryotaro.dev/posts/pastry-scalable-decentralized-object-location-and-routing-for-large-scale-peer-to-peer-systems/</link>
      <pubDate>Tue, 07 Nov 2023 02:04:06 -0500</pubDate>
      
      <guid>https://nryotaro.dev/posts/pastry-scalable-decentralized-object-location-and-routing-for-large-scale-peer-to-peer-systems/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://rowstron.azurewebsites.net/PAST/pastry.pdf&#34;&gt;Pastry&lt;/a&gt;は、広域ネットーワーク規模のPeer-to-Peerなルーティングのアルゴリズムであり、メッセージをメッセージのキーに最も近いIDをもつノードに転送する。
Pastryに参加するノードは対称的で、すべてのノードは同じアルゴリズムにしたがう。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
