<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ランキング学習 on Blanket</title>
    <link>https://nryotaro.dev/tags/%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E5%AD%A6%E7%BF%92/</link>
    <description>Recent content in ランキング学習 on Blanket</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 07 Jan 2023 20:59:34 -0500</lastBuildDate><atom:link href="https://nryotaro.dev/tags/%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E5%AD%A6%E7%BF%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>抄訳 Learning to Rank using Gradient Descent (2005)</title>
      <link>https://nryotaro.dev/posts/learning_to_rank_using_gradient_descent/</link>
      <pubDate>Sat, 07 Jan 2023 20:59:34 -0500</pubDate>
      
      <guid>https://nryotaro.dev/posts/learning_to_rank_using_gradient_descent/</guid>
      <description>&lt;p&gt;ランキング学習のニューラルネットワークRankNetを提案する。
RankNetは、ベクトルから実数を出力し、その出力が大きいほどランキングが高いと予測する。
損失関数には、ある2つのベクトルのうち片方が他方よりもランキングが高い確率をあたえる。
ここでの確率には、両ベクトルのモデルの出力の差をシグモイド関数に入力したときの出力を使う。
RankNetの学習は、モデルの出力と訓練データの確率分布の交差エントロピーを最小化する。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Applying Deep Learning To Airbnb Search</title>
      <link>https://nryotaro.dev/posts/applying_deep_learning_to_airbnb_search/</link>
      <pubDate>Fri, 31 Aug 2018 19:21:10 +0900</pubDate>
      
      <guid>https://nryotaro.dev/posts/applying_deep_learning_to_airbnb_search/</guid>
      <description>&lt;h3 id=&#34;概要&#34;&gt;概要&lt;/h3&gt;
&lt;p&gt;論文では、Airbnbが深層学習を宿泊先検索に適用した時の試行錯誤と結果を紹介している。
採用したモデルのアルゴリズムと特徴量エンジニアリングの説明が本稿の大部分を占める。
深層学習を試す以前はGBDTを採用おり、以下の順にアルゴリズムを変えていった。
当初は、アルゴリズムを段階的に高度にしていくつもりはなく、1.以前には複雑なアルゴリズムをいきなり試したが、失敗に終わっている。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
