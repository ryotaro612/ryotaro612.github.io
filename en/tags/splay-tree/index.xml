<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Splay Tree on Blanket</title>
    <link>http://localhost:1313/en/tags/splay-tree/</link>
    <description>Recent content in Splay Tree on Blanket</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Aug 2023 13:49:56 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/splay-tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-Adjusting Binary Search Trees(1985)</title>
      <link>http://localhost:1313/en/posts/self_adjusting_binary_search_trees/</link>
      <pubDate>Sat, 12 Aug 2023 13:49:56 -0400</pubDate>
      <guid>http://localhost:1313/en/posts/self_adjusting_binary_search_trees/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.cs.cmu.edu/~sleator/papers/self-adjusting.pdf&#34;&gt;The splay tree&lt;/a&gt;, a self-adjusting form of a binary search tree, is a binary search tree that moves an accessed node to the root after each access.&#xA;On an \(n\)-node splay tree, accessing, inserting and deleting have an amortized time bound of \(O(\log n)\) per operation.&#xA;In addition, for sufficiently long access sequences, splay trees are as efficient, to within a constant factor, as static optimum search trees.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
