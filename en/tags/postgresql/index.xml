<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL on Blanket</title>
    <link>https://ryotaro.dev/en/tags/postgresql/</link>
    <description>Recent content in PostgreSQL on Blanket</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 22 Mar 2024 15:35:16 +0900</lastBuildDate>
    <atom:link href="https://ryotaro.dev/en/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TelegraphCQ: Continuous Dataflow Processing for an Uncertain World (2003)</title>
      <link>https://ryotaro.dev/en/posts/telegraphcq-continuous-dataflow-processing-for-an-uncertain-world/</link>
      <pubDate>Fri, 22 Mar 2024 15:35:16 +0900</pubDate>
      <guid>https://ryotaro.dev/en/posts/telegraphcq-continuous-dataflow-processing-for-an-uncertain-world/</guid>
      <description>&lt;p&gt;Stonebraker and Ã‡etintemel presented &lt;a href=&#34;https://cs.brown.edu/~ugur/fits_all.pdf&#34;&gt;&amp;ldquo;One Size Fits All&amp;rdquo;&lt;/a&gt; in 2005.&#xA;The phrase refers to the fact that various data-centric applications use traditional DMBMS architectures to store data regardless of the characteristics and requirements of the data.&#xA;In the paper, they argued that this approach was no longer applicable, with examples of streaing processing.&#xA;&lt;a href=&#34;https://cs.brown.edu/courses/cs227/archives/2015/papers/ss-telegraphcq.pdf&#34;&gt;TelegraphCQ&lt;/a&gt;, presented in 2003, is the first generation of databases for streamingffff data from the early 2000s.&lt;/p&gt;</description>
    </item>
    <item>
      <title>THE DESIGN OF POSTGRES (1986)</title>
      <link>https://ryotaro.dev/en/posts/the-design-of-postgres/</link>
      <pubDate>Sat, 17 Feb 2024 17:44:38 +0900</pubDate>
      <guid>https://ryotaro.dev/en/posts/the-design-of-postgres/</guid>
      <description>&lt;p&gt;The preliminary design of POSTGRES was presented in &lt;a href=&#34;https://dsf.berkeley.edu/papers/ERL-M85-95.pdf&#34;&gt;The Design of Postgres&lt;/a&gt;.&#xA;According to &lt;a href=&#34;https://www.postgresql.jp/document/8.3/html/history.html&#34;&gt;Brief History of Postgres&lt;/a&gt;, the data model, rules, and storage system were separately described in different papers: &lt;a href=&#34;https://apps.dtic.mil/sti/tr/pdf/ADA184251.pdf&#34;&gt;The Postgres Data Model&lt;/a&gt;, &lt;a href=&#34;https://apps.dtic.mil/sti/tr/pdf/ADA179161.pdf&#34;&gt;The Design of the Postgres Rule System&lt;/a&gt;, and &lt;a href=&#34;https://dsf.berkeley.edu/papers/ERL-M87-06.pdf&#34;&gt;The Design of the Postgres Storage System&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;POSTGRES is the successor to the INGRES relational database system.&#xA;The main design goals of POSTGRES were to support complex objects, simplify the DBMS code for crash recovery, and utilize optical disks while making as few changes as possible to the relational model.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
